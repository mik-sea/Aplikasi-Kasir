/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.KasirController;
import Model.Barang;
import Model.Keranjang;
import Model.KeranjangWithBarang;
import Model.ModelTabelKeranjang;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import javax.swing.*;
import java.util.List;

/**
 *
 * @author Saip
 */
public class FormKasir extends javax.swing.JFrame {

    /**
     * Creates new form FormKasir
     */
    public FormKasir() {
        initComponents();
        
        AutoCompleteDecorator.decorate(listBarang);
        listBarangToShow();
        loadMahasiswaTable();
    }
    private void listBarangToShow() {
        KasirController controller = new KasirController();
//        controller.getAllBarang();
        List<Barang> listbarang = controller.getAllBarang();
        for(Barang barang : listbarang){
            listBarang.addItem(barang.getNama_barang());
        }
    }
    public void loadMahasiswaTable() {
        try {
            KasirController controller = new KasirController();
            List<Keranjang> listKeranjang = controller.getAllKeranjang();
            System.out.println("Jumlah data yang diambil: " + listKeranjang.size());

            ModelTabelKeranjang tableModel = new ModelTabelKeranjang(listKeranjang);
            jTable1.setModel(tableModel);

            // Refresh JTable
            jTable1.revalidate();
            jTable1.repaint();
            System.out.println("Tabel berhasil diperbarui.");
        } catch (Exception e) {
            System.out.println("Terjadi kesalahan saat memuat data ke tabel: " + e.getMessage());
            e.printStackTrace();
        }
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        listBarang = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tambahkanButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        totalbarangField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        totalhargaField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pembayaranField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nama Barang");

        listBarang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        listBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBarangActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama Barang", "Harga Barang", "Total Barang", "Total Harga"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        tambahkanButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tambahkanButton.setText("Tambahkan");
        tambahkanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahkanButtonActionPerformed(evt);
            }
        });

        hapusButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        hapusButton.setText("Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        EditButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setText("Total");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Total Barang");

        totalbarangField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Total Harga");

        totalhargaField.setEditable(false);
        totalhargaField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        totalhargaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalhargaFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("KASIR");

        pembayaranField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pembayaranField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pembayaranFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Pembayaran");

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setText("Pembayaran");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(323, 323, 323))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton4)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(53, 53, 53)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(totalbarangField)
                                        .addComponent(listBarang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(tambahkanButton)
                                    .addGap(43, 43, 43)
                                    .addComponent(hapusButton)
                                    .addGap(47, 47, 47)
                                    .addComponent(EditButton))
                                .addComponent(jLabel4)
                                .addComponent(totalhargaField)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(pembayaranField))
                            .addComponent(jButton5))
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(listBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(totalbarangField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahkanButton)
                    .addComponent(hapusButton)
                    .addComponent(EditButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalhargaField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(pembayaranField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listBarangActionPerformed

    private void totalhargaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalhargaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalhargaFieldActionPerformed

    private void tambahkanButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Validasi input
        String nama_barang = listBarang.getSelectedItem() != null ? listBarang.getSelectedItem().toString().toLowerCase() : "";
        if (nama_barang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama barang tidak boleh kosong!");
            return;
        }
        System.out.println(nama_barang);
        try {
            int total_barang = Integer.parseInt(totalbarangField.getText());
            if (total_barang <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah barang harus lebih dari nol!");
                return;
            }

            KasirController kasirController = new KasirController();
            List<Barang> kbarang = kasirController.getByNameKeranjangBarang(nama_barang);

            // Proses perhitungan harga
            int total_harga = 0;
            System.out.println(nama_barang);
            for (Barang item : kbarang) {
                System.out.println("harga :"+item.getHarga());
                total_harga += total_barang * item.getHarga(); // asumsi item memiliki metode getHarga()
                System.out.println("harga :"+item);
            }

            // Menambahkan ke keranjang
            Keranjang keranjang = new Keranjang();
            keranjang.setStatus("wait");
            keranjang.setNama_barang(nama_barang);
            keranjang.setTotal_harga(total_harga);
            keranjang.setTotal_barang(total_barang);
            kasirController.addKeranjang(keranjang);
            System.out.println("total barang :"+total_barang);

            // Memuat ulang tabel
            loadMahasiswaTable();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Jumlah barang harus berupa angka!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambahkan barang ke keranjang.");
        }
    }

    private void pembayaranFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pembayaranFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pembayaranFieldActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int totalharga = Integer.parseInt(totalhargaField.getText());
        String pembayarantext = pembayaranField.getText();
        int pembayaran = Integer.parseInt(pembayarantext);
        if(pembayarantext.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pastikan input pembayaran yang sesuai");
        }
        if(pembayaran < totalharga){
            JOptionPane.showMessageDialog(this, "Pembayaran Kurang!");
        }
        else if(pembayaran == totalharga){
            JOptionPane.showMessageDialog(this, "Pembayaran Berhasil!\nTerima kasih sudah membeli!");
            // Menghitung jumlah total harga pada kolom ke-3 (indeks 2)
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                Object value = jTable1.getValueAt(i, 0);
                KasirController kasir = new KasirController();
                kasir.deleteKeranjang(Integer.parseInt(value.toString()));
            }
        }else if(pembayaran > totalharga){
            int totalkembalian = pembayaran - totalharga;
            JOptionPane.showMessageDialog(this, "Pembayaran Berhasil!\nKembalian : Rp. "+totalkembalian);
            // Menghitung jumlah total harga pada kolom ke-3 (indeks 2)
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                Object value = jTable1.getValueAt(i, 0);
                KasirController kasir = new KasirController();
                kasir.deleteKeranjang(Integer.parseInt(value.toString()));

            }
        }
        loadMahasiswaTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // Mendapatkan indeks baris yang dipilih
        int selectedRow = jTable1.getSelectedRow();
        Object idValue = jTable1.getValueAt(selectedRow, 0);
        // Mengecek apakah ada baris yang dipilih
        if (selectedRow != -1) {
            // Menghapus baris dari model
            KasirController kasir = new KasirController();
            kasir.deleteKeranjang(Integer.parseInt(idValue.toString()));
            loadMahasiswaTable();
        }
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Inisialisasi total harga
        int totalHarga = 0;

        // Menghitung jumlah total harga pada kolom ke-3 (indeks 2)
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            // Mendapatkan nilai dari kolom Total Harga
            Object value = jTable1.getValueAt(i, 3);

            // Jika nilai tersebut adalah angka (double)
            if (value instanceof Number) {
                totalHarga += ((Number) value).intValue();
            }
        }
        totalhargaField.setText(String.valueOf(totalHarga));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // Mendapatkan indeks baris yang dipilih
        int selectedRow = jTable1.getSelectedRow();
        Object idValue = jTable1.getValueAt(selectedRow, 0);
        Object nama_barang = jTable1.getValueAt(selectedRow, 1);
        Object total_barang = jTable1.getValueAt(selectedRow, 2);
        Object total_harga = jTable1.getValueAt(selectedRow, 3);
        KasirController kasir = new KasirController();
        Keranjang keranjang = new Keranjang();
        //hitung total harga
        KasirController kasirController = new KasirController();
        List<Barang> kbarang = kasirController.getByNameKeranjangBarang((String) nama_barang);

        // Proses perhitungan harga
        int total_harga_akhir = 0;
        System.out.println(nama_barang);
        for (Barang item : kbarang) {
            System.out.println("harga :"+item.getHarga());
            total_harga_akhir += Integer.parseInt(String.valueOf(total_barang)) * item.getHarga(); // asumsi item memiliki metode getHarga()
            System.out.println("harga :"+item);
        }

        keranjang.setId_keranjang(Integer.parseInt(String.valueOf(idValue)));
        keranjang.setNama_barang(String.valueOf(nama_barang));
        keranjang.setTotal_barang(Integer.parseInt(String.valueOf(total_barang)));
        keranjang.setTotal_harga(total_harga_akhir);
        keranjang.setStatus("wait");
        kasir.updateKeranjang(keranjang);
        System.out.println("ID: " + idValue);
        System.out.println("Nama Barang: " + nama_barang);
        System.out.println("Total Barang: " + total_barang);
        System.out.println("Total Harga: " + total_harga);

        loadMahasiswaTable();
    }//GEN-LAST:event_EditButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditButton;
    private javax.swing.JButton hapusButton;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> listBarang;
    private javax.swing.JTextField pembayaranField;
    private javax.swing.JButton tambahkanButton;
    private javax.swing.JTextField totalbarangField;
    private javax.swing.JTextField totalhargaField;
    // End of variables declaration//GEN-END:variables
}
